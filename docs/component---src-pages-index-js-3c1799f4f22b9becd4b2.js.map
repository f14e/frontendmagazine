{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Layout/Container.jsx","webpack:///./src/components/Layout/Content.jsx","webpack:///./src/components/Header/Header.js","webpack:///./src/components/layout.js","webpack:///./src/components/Footer/Footer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/ReadingTimeEstimate/ReadingTimeEstimate.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","components_layout__WEBPACK_IMPORTED_MODULE_3__","location","components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","date","components_ReadingTimeEstimate_ReadingTimeEstimate__WEBPACK_IMPORTED_MODULE_7__","minutes","Math","round","readingTime","dangerouslySetInnerHTML","__html","description","excerpt","components_Footer_Footer__WEBPACK_IMPORTED_MODULE_5__","React","Component","pageQuery","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","link","rel","sizes","href","type","color","defaultProps","arrayOf","cx","classNames","bind","styles","Container","children","react_default","className","Content","Header","header","gatsby_browser_entry","textDecoration","Layout_Container","Layout_Content","Layout","react","components_Header_Header","classnames_bind__WEBPACK_IMPORTED_MODULE_1__","classnames_bind__WEBPACK_IMPORTED_MODULE_1___default","_Footer_module_css__WEBPACK_IMPORTED_MODULE_2__","_Footer_module_css__WEBPACK_IMPORTED_MODULE_2___default","Footer","target","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","GitHub","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","headerFontFamily","blockMarginBottom","typography","Typography","ref","useRef","estimate","useEffect","window","navigator","platform","match","twemoji","parse","current","folder","ext","fontSize"],"mappings":"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","file":"component---src-pages-index-js-3c1799f4f22b9becd4b2.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"components/layout\";\nimport SEO from \"components/seo\";\nimport Footer from \"components/Footer/Footer\";\nimport { rhythm } from \"utils/typography\";\nimport ReadingTimeEstimate from \"components/ReadingTimeEstimate/ReadingTimeEstimate\";\nimport \"./index.css\";\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"Фронтенд разработка\"\n          keywords={[\n            `блог`,\n            `фронтенд`,\n            `javascript`,\n            `react`,\n            `программирование`,\n            `frontend`,\n            `frontend magazine`,\n            `переводы`,\n          ]}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                <time>{node.frontmatter.date}</time>\n                &nbsp;\n                ·\n                &nbsp;\n                <ReadingTimeEstimate\n                  minutes={Math.round(node.fields.readingTime.minutes)}\n                />\n              </small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          );\n        })}\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM YYYY\", locale: \"ru\")\n            title\n            description\n          }\n          fields {\n            readingTime {\n              minutes\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          name: \"msapplication-TileColor\",\n          content: \"#f0db4f\",\n        },\n        {\n          name: \"theme-color\",\n          content: \"#ffffff\",\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n      link={[\n        {\n          rel: \"apple-touch-icon\",\n          sizes: \"180x180\",\n          href: \"/apple-touch-icon.png\",\n        },\n        {\n          rel: \"icon\",\n          type: \"image/png\",\n          sizes: \"32x32\",\n          href: \"/favicon-32x32.png\",\n        },\n        {\n          rel: \"icon\",\n          type: \"image/png\",\n          sizes: \"16x16\",\n          href: \"/favicon-16x16.png\",\n        },\n        {\n          rel: \"manifest\",\n          href: \"/site.webmanifest\",\n        },\n        {\n          rel: \"mask-icon\",\n          href: \"/safari-pinned-tab.svg\",\n          color: \"#f0db4f\",\n        },\n      ]}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `ru`,\n  meta: [],\n  keywords: [\n    \"frontend magazine\",\n    \"фронденд\",\n    \"javascript\",\n    \"css\",\n    \"переводы\",\n    \"блог\",\n  ],\n  description: `Образовательные материалы для Frontend инженеров.\nНовости, статьи, руководства, переводы и полезные инструменты.`,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from \"react\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Container.module.css\";\n\nconst cx = classNames.bind(styles);\n\nconst Container = ({ children }) => (\n  <div className={cx(\"container\")}>{children}</div>\n);\n\nexport default Container;\n","import React from \"react\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Content.module.css\";\n\nconst cx = classNames.bind(styles);\n\nconst Content = ({ children }) => (\n  <div className={cx(\"content\")}>{children}</div>\n);\n\nexport default Content;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { Content, Container } from \"components/Layout/index\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Header.module.css\";\n\nconst cx = classNames.bind(styles);\n\nconst Header = ({ location, title }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  let header;\n\n  if (location.pathname === rootPath) {\n    header = (\n      <h1>\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h1>\n    );\n  } else {\n    header = (\n      <h3>\n        <Link\n          style={{\n            boxShadow: `none`,\n            textDecoration: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h3>\n    );\n  }\n\n  return (\n    <header className={cx(\"header\")}>\n      <Container>\n        <Content>{header}</Content>\n      </Container>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Fragment } from \"react\";\nimport Header from \"components/Header/Header\";\nimport { Content, Container } from \"components/Layout/index\";\n\nconst Layout = ({ children, location, title }) => (\n  <Fragment>\n    <Header location={location} title={title} />\n    <Container>\n      <Content>\n        <main>{children}</main>\n      </Content>\n    </Container>\n  </Fragment>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Footer.module.css\";\n\nconst cx = classNames.bind(styles);\n\nconst Footer = () => (\n  <footer>\n    <div className={cx(\"links\")}>\n      <a\n        href=\"https://vk.com/frontendmagazine\"\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        Вконтакте\n      </a>\n      ·\n      <a\n        href=\"https://t.me/frontendmagazine\"\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        Telegram\n      </a>\n      ·\n      <a\n        href=\"https://www.instagram.com/frontendmag\"\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        Instargram\n      </a>\n      ·\n      <a href=\"/rss.xml\" title=\"RSS Feed\" target=\"_blank\">\n        RSS\n      </a>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import Typography from \"typography\";\n\nimport GitHub from \"typography-theme-github\";\n\nGitHub.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  };\n};\n\nGitHub.googleFonts = [\n  {\n    name: \"Roboto Condensed\",\n    styles: [\"400\"],\n  },\n];\n\nGitHub.headerFontFamily = [\"Roboto Condensed\", \"sans-serif\"];\nGitHub.blockMarginBottom = \"20px\";\n\nconst typography = new Typography(GitHub);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React, { useRef, useEffect } from \"react\";\nimport twemoji from \"twemoji\";\n\nexport default ({ minutes }) => {\n  const ref = useRef(null);\n\n  let estimate = \"🍷🍷🍷\";\n\n  if (minutes < 3) {\n    estimate = \"🥤\";\n  } else if (minutes < 6) {\n    estimate = \"🥤🥤🥤\";\n  } else if (minutes < 10) {\n    estimate = \"☕️🍩🍩\";\n  }\n\n  useEffect(() => {\n    if (!window.navigator.platform.match(/(iphone|ipad|macintel)/i)) {\n      twemoji.parse(ref.current, { folder: \"svg\", ext: \".svg\" });\n    }\n  }, []);\n\n  return (\n    <span style={{ fontSize: \"1.2em\" }} title={`${minutes} мин.`} ref={ref}>\n      {estimate}\n    </span>\n  );\n};\n"],"sourceRoot":""}